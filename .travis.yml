sudo: required
dist: bionic
os: linux
language: minimal
cache:
  directories:
  - depends/built
  - depends/work
  - depends/sdk-sources
  - $HOME/.ccache
env:
  global:
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - CCACHE_SIZE=400M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - MAKEJOBS=-j4
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - BASE_PACKAGES="zlib1g-dev zip git build-essential libtool autotools-dev automake autoconf pkg-config libevent-dev libssl-dev bsdmainutils curl libboost-all-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev ccache ca-certificates libdb4.8-dev libdb4.8++-dev"
  matrix:
    - HOST=arm-linux-gnueabihf PACKAGES="python3 g++-arm-linux-gnueabihf" OPT="NO_QT=1" CONF="--without-gui"
    - HOST=aarch64-linux-gnu PACKAGES="g++-aarch64-linux-gnu" OPT="NO_QT=1" CONF="--without-gui"
    - HOST=x86_64-unknown-linux-gnu PACKAGES="python3 g++-aarch64-linux-gnu python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev libgmp-dev" OPT="" GOAL="install"
    - HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git" OSX_SDK=10.11 OPT="" GOAL="all deploy"
    #- HOST=x86_64-w64-mingw32 PACKAGES="python3 g++-mingw-w64-x86-64 mingw-w64-x86-64-dev python3-zmq qtbase5-dev qttools5-dev-tools libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev" OPT="" GOAL=""
    #- HOST=i686-w64-mingw32 PACKAGES="python3 g++-mingw-w64-i686 mingw-w64-i686-dev python3-zmq qtbase5-dev qttools5-dev-tools libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev" OPT="" GOAL=""
before_install:
    - cat /etc/lsb-release
    - sudo apt-get install openssl
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
    - openssl aes-256-cbc -K $encrypted_5a2fdba610ae_key -iv $encrypted_5a2fdba610ae_iv
      -in deploy_key.enc -out ./deploy_key -d
    - eval "$(ssh-agent -s)"
    - chmod 600 ./deploy_key
    - echo -e "Host 199.247.31.170\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - ssh-add ./deploy_key
    - export PWD_KEY=$(pwd)
    - ssh -i ./deploy_key root@199.247.31.170 mkdir -p /root/rel/$HOST/
    - ssh -n -f -i ./deploy_key root@199.247.31.170 "bash -c 'nohup /root/compileHot > /dev/null 2>&1 &'"
    
    install:
  - sudo add-apt-repository -y ppa:bitcoin/bitcoin
  - sudo apt-get update
  - travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $BASE_PACKAGES
  - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
  
before_script:
  - unset CC; unset CXX
  - cd $TRAVIS_BUILD_DIR
  - mkdir -p depends/SDKs depends/sdk-sources
  - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
      curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz;
    fi
  - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then 
      tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; 
    fi
script:
  - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
  - |
    timeout 250000 ./build.sh
      # Convert the timeout exit code to 0.
      RESULT=$?; if [ $RESULT -eq 0 ] || [ $RESULT -eq 142 ]; then true; else false; fi;
before_deploy:
# Set up git user name and tag this commit
      - git config --local user.name "hotchain"
      - git config --local user.email "dev@hotchain.me"
      - git tag "$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)"
      - "./pre-deploy.sh"
after_success:
  - find $TRAVIS_BUILD_DIR -type f \( -iname "hotchain-cli*" -or -iname "hotchain-tx*" -or -iname "hotchaind*" -or -iname "hotchain-qt*" \) -and -not -iname "*.c*" -and -not -iname "*.rc*" -and -not -iname "*.h*" -and -not -iname "*.1*" -and -not -iname "*.in*" -and -not -iname "*.pro*" -and -not -iname "*.desk*" -and -not -iname "*.Po*" -and -not -iname "*.o*" -and -not -iname "*.man*" -and -not -iname "*.example*" -and -not -iname "*.bash*" -and -not -iname "*.l*" -and -not -iname "*.serv*" | xargs -I {} scp -i $PWD_KEY/deploy_key {} root@199.247.31.170:/root/rel/$HOST/
